package com.ns.neogine.input;

public enum Key {
	// unknown keys
	Unknown(-1, "unknown", ""),

	// printable keys
	Space(32, "space", " "),
	ExclamationMark(33, "exclamation mark", "!"),
	Quote(34, "quote", "\""),
	Hash(35, "hash", "#"),
	Dollar(36, "dollar", "$"),
	Percent(37, "percent", "%"),
	Ampersand(38, "Ampersand", "&"),
	Apostrophe(39, "apostrophe", "'"),
	LeftParentheses(40, "left parentheses", "("),
	RightParentheses(41, "right parentheses", ")"),
	Asterisk(42, "asterisk", "*"),
	Plus(43, "plus", "+"),
	Comma(44, "comma", ","),
	Minus(45, "minus", "-"),
	Period(46, "period", "."),
	Slash(47, "slash", "/"),
	_0(48, "zero", "0"),
	_1(49, "one", "1"),
	_2(50, "two", "2"),
	_3(51, "three", "3"),
	_4(52, "four", "4"),
	_5(53, "five", "5"),
	_6(54, "six", "6"),
	_7(55, "seven", "7"),
	_8(56, "eight", "8"),
	_9(57, "nine", "9"),
	SemiColon(59, "semicolon", ";"),
	LeftChevron(60, "left chevron", "<"),
	Equal(61, "equal", "="),
	RightChevron(62, "right chevron", ">"),
	InterrogationMark(63, "interrogation mark", "?"),
	At(64, "at", "@"),
	A(65, "A", "A"),
	B(66, "B", "B"),
	C(67, "C", "C"),
	D(68, "D", "D"),
	E(69, "E", "E"),
	F(70, "F", "F"),
	G(71, "G", "G"),
	H(72, "H", "H"),
	I(73, "I", "I"),
	J(74, "J", "J"),
	K(75, "K", "K"),
	L(76, "L", "L"),
	M(77, "M", "M"),
	N(78, "N", "N"),
	O(79, "O", "O"),
	P(80, "P", "P"),
	Q(81, "Q", "Q"),
	R(82, "R", "R"),
	S(83, "S", "S"),
	T(84, "T", "T"),
	U(85, "U", "U"),
	V(86, "V", "V"),
	W(87, "W", "W"),
	X(88, "X", "X"),
	Y(89, "Y", "Y"),
	Z(90, "Z", "Z"),
	LeftBracket(91, "left bracket", "["),
	Backslash(92, "backslash", "\\"),
	RightBracket(93, "right bracket", "]"),
	Carat(94, "carat", "^"),
	Underscore(95, "underscore", "_"),
	GraveAccent(96, "grave accent", "`"),
	LeftBrace(123, "left brace", "{"),
	Pipe(124, "pipe", "|"),
	RightBrace(123, "right brace", "}"),
	World1(161, "world 1", ""),
	World2(162, "world 2", ""),

	// functional keys
	Escape(256, "escape", ""),
	Enter(257, "enter", ""),
	Tab(258, "tab", ""),
	Backspace(259, "backspace", ""),
	Insert(260, "insert", ""),
	Delete(261, "delete", ""),
	Right(262, "right", ""),
	Left(263, "left", ""),
	Down(264, "down", ""),
	Up(265, "up", ""),
	PageUp(266, "page up", ""),
	PageDown(267, "page down", ""),
	Home(268, "home", ""),
	End(269, "end", ""),
	CapsLock(280, "caps lock", ""),
	ScrollLock(281, "scroll lock", ""),
	NumLock(282, "num lock", ""),
	PrintScreen(283, "print screen", ""),
	Pause(284, "pause", ""),
	F0(290, "f0", ""),
	F1(291, "f1", ""),
	F2(292, "f2", ""),
	F3(293, "f3", ""),
	F4(294, "f4", ""),
	F5(295, "f5", ""),
	F6(296, "f6", ""),
	F7(297, "f7", ""),
	F8(298, "f8", ""),
	F9(299, "f9", ""),
	F10(300, "f10", ""),
	F11(301, "f11", ""),
	F12(302, "f12", ""),
	F13(303, "f13", ""),
	F14(304, "f14", ""),
	F15(305, "f15", ""),
	F16(306, "f16", ""),
	F17(307, "f17", ""),
	F18(308, "f18", ""),
	F19(309, "f19", ""),
	F20(310, "f20", ""),
	F21(311, "f21", ""),
	F22(312, "f22", ""),
	F23(313, "f23", ""),
	F24(314, "f24", ""),
	F25(315, "f25", ""),
	KP0(320, "kp 0", ""),
	KP1(321, "kp 1", ""),
	KP2(322, "kp 2", ""),
	KP3(323, "kp 3", ""),
	KP4(324, "kp 4", ""),
	KP5(325, "kp 5", ""),
	KP6(326, "kp 6", ""),
	KP7(327, "kp 7", ""),
	KP8(328, "kp 8", ""),
	KP9(329, "kp 9", ""),
	KPDecimal(330, "kp .", ""),
	KPDivide(331, "kp /", ""),
	KPMultiply(332, "kp *", ""),
	KPSubstract(333, "kp -", ""),
	KPAdd(334, "kp +", ""),
	KPEnter(335, "kp enter", ""),
	KPEqual(336, "kp =", ""),
	LeftShift(340, "left shift", ""),
	LeftControl(341, "left control", ""),
	LeftAlt(342, "left alt", ""),
	LeftSuper(343, "left super", ""),
	RightShift(344, "right shift", ""),
	RightControl(345, "right control", ""),
	RightAlt(346, "right alt", ""),
	RightSuper(347, "right super", ""),
	Menu(348, "menu", "");


	public final int code;
	public final String name;
	public final String representation;


	Key(int c, String n, String r) {
		code = c;
		name = n;
		representation = r;
	}


	public static Key getKey(int c) {
		for( Key k : values() ) {
			if( k.code == c )
				return k;
		}

		return Unknown;
	}
}
